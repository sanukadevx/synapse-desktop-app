/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.dev.synapse.dialogs;

import com.dev.synapse.connection.MySQL;
import com.dev.synapse.gui.LoginScreen;
import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.FlatIntelliJLaf;
import java.sql.ResultSet;
import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import java.sql.Timestamp;

/**
 *
 * @author sanukadev
 */
public class CreateBloodRequest extends javax.swing.JDialog {
            
    private final HashMap<String, Integer> bloodTypeMap;
    private final HashMap<String, Integer> urgencyLevelMap;
    
    /**
     * Creates new form CreateBloodRequest
     */
    public CreateBloodRequest(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        styles();
        this.bloodTypeMap = new HashMap<>();
        this.urgencyLevelMap = new HashMap<>();
        loadBloodTypes();
        loadUrgencyLevels();
    }

    private void styles() {
        bloodTypeCombo.putClientProperty(FlatClientProperties.STYLE, "arc:15");
        requiredUnitsInput.putClientProperty(FlatClientProperties.STYLE, "arc:15");
        urgencyLevelCombo.putClientProperty(FlatClientProperties.STYLE, "arc:15");
    }

    private void loadBloodTypes() {
        try {
            ResultSet rs = MySQL.executeSearch("SELECT * FROM `blood_types`");
            Vector<String> values = new Vector<>();
            values.add("Select Required Blood Type");
            bloodTypeMap.put("Select Required Blood Type", 0);

            while (rs.next()) {
                String insTypeName = rs.getString("name");
                bloodTypeMap.put(insTypeName, rs.getInt("blood_type_id"));
                values.add(insTypeName);
            }

            DefaultComboBoxModel dcm = new DefaultComboBoxModel(values);
            bloodTypeCombo.setModel(dcm);

        } catch (Exception e) {
        }
    }

    private void loadUrgencyLevels() {
        try {
            ResultSet rs = MySQL.executeSearch("SELECT * FROM `urgency_level`");
            Vector<String> values = new Vector<>();
            values.add("Select Urgency Level");
            urgencyLevelMap.put("Select Urgency Level", 0);

            while (rs.next()) {
                String urgencyLevelType = rs.getString("name");
                urgencyLevelMap.put(urgencyLevelType, rs.getInt("urgency_level_id"));
                values.add(urgencyLevelType);
            }

            DefaultComboBoxModel dcm = new DefaultComboBoxModel(values);
            urgencyLevelCombo.setModel(dcm);

        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bloodTypeCombo = new javax.swing.JComboBox<>();
        createRequestBtn = new com.dev.synapse.components.PrimaryButton();
        jLabel3 = new javax.swing.JLabel();
        urgencyLevelCombo = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        requiredUnitsInput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Poppins", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Create New Blood Request");

        jLabel2.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Blood Type");

        bloodTypeCombo.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N

        createRequestBtn.setText("Create");
        createRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createRequestBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Required Units");

        urgencyLevelCombo.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Urgency Level");

        requiredUnitsInput.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(createRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(bloodTypeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(urgencyLevelCombo, 0, 270, Short.MAX_VALUE)
                    .addComponent(requiredUnitsInput))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bloodTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(requiredUnitsInput, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(urgencyLevelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(createRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createRequestBtnActionPerformed
        
        int selectedBloodType = bloodTypeCombo.getSelectedIndex();
        String requiredUnits = requiredUnitsInput.getText();
        int selectedUrgencyLevel = urgencyLevelCombo.getSelectedIndex();
        int hospitalId = 3;
        final int DEFAULT_STATUS = 1;
        
        hospitalId = LoginScreen.institutionId;

        LocalDateTime now = LocalDateTime.now();
        Timestamp presentDateTime = Timestamp.valueOf(now);

        MySQL.executeIUD("INSERT INTO `blood_requests` "
                + "(`blood_type_id`, `units_required`, `request_date`, `urgency_level_id`, `requesting_hospital_id`, `request_status_id`) "
                + "VALUES('" 
                + selectedBloodType + "', '" 
                + requiredUnits + "', '" 
                + presentDateTime + "', '" 
                + selectedUrgencyLevel + "', '" 
                + hospitalId + "', '" 
                + DEFAULT_STATUS + "')");
        
        this.dispose();
    }//GEN-LAST:event_createRequestBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        FlatIntelliJLaf.setup();

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreateBloodRequest dialog = new CreateBloodRequest(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bloodTypeCombo;
    private com.dev.synapse.components.PrimaryButton createRequestBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField requiredUnitsInput;
    private javax.swing.JComboBox<String> urgencyLevelCombo;
    // End of variables declaration//GEN-END:variables
}
